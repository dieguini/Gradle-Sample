name: Gradle sample 

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "dev", "devops" ]

permissions:
  contents: read

jobs:
  tests:
    # if: false # Skipp job when needed 
    runs-on: ubuntu-latest
    steps:
    # Step 1: obtain repo from GitHub
    - 
      name: Checkout Code
      uses: actions/checkout@v3
    # Step 2: JDK
    - 
      name: Setup JDK 1.8
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '8'
    # Step 3: Build and Test
    - 
      name: Build & Test
      run: |
        chmod +x gradle/gradlew
        gradle/gradlew -p gradle clean build
        gradle/gradlew -p gradle cleanTest test

  build:
    runs-on: ubuntu-latest
    env:
      DOCKER_REGISTRY: ${{ vars.DOCKER_HUB_NS }}
      DOCKER_IMAGE_NAME: ${{ vars.DOCKER_IMAGE_NAME }}
      GHCR_REGISTRY: ghcr.io
      GHCR_IMAGE_NAME: ${{ github.repository }}
    needs: tests
    permissions:
      packages: write
      contents: read
    steps:
      # Step 1: obtain repo from GitHub
      - 
        name: Checkout Code
        uses: actions/checkout@v3
      # Step 2: build
      -
        name: Build & Test
        run: |
          chmod +x gradle/gradlew
          gradle/gradlew -p gradle clean build
      # Step 3: Buildx improve
      - 
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      # Step 4: Log to registries
      # Step 4.1: Log to ghcr
      - 
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # Step 4.2: Log to ghcr
      - 
        name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          # username: ${{ github.actor }}
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      # Step 5: Metadata for image name
      - 
        name: Docker metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}
            ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_IMAGE_NAME }}
          tags: |
            # dynamically set the branch name and sha as a custom tag
            type=raw,value={{ base_ref }}
      # Step 6: Build and push
      - 
        name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ steps.meta.outputs.tags }}
